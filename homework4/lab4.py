# -*- coding: utf-8 -*-
"""Lab4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_CSowz1e8yzd5RCn7pyX53l7VAABZuhY

# New Section
"""

import matplotlib.pyplot as plt

import pandas as pd

df = pd.read_csv('Processed data.csv')
df.head()

!pip install missingno

import missingno as msno

msno.matrix(df)

msno.bar(df)

old_df = pd.read_csv('video_games_sales.csv')

msno.bar(old_df)

import seaborn as sns

"""**Продажа по регионе**"""

NA = df["NA_Sales"].sum()
EU = df["EU_Sales"].sum()
JP = df["JP_Sales"].sum()
Other = df["Other_Sales"].sum()

x = ["NA", "EU", "JP", "Other"]
y = [NA, EU, JP, Other]

fig_dims = (5, 2)
fig, ax = plt.subplots(figsize=fig_dims)
sns.barplot(y, x)

"""**Продажа по жанру**"""

df.head()

sales_genre = df.groupby(['Genre']).sum()

sales_genre = sales_genre[['Global_Sales']]

sales_genre.reset_index(inplace=True)
sales_genre = sales_genre.rename(columns = {'index':'new column name'})
sales_genre.sort_values(by='Global_Sales', ascending=False, inplace=True)

fig_dims = (10, 5)
fig, ax = plt.subplots(figsize=fig_dims)
sns.barplot(x='Global_Sales', y='Genre', ax=ax, data=sales_genre)

"""**Продажа игр по году выпуска**"""

sales_year = df.groupby(['Year_of_Release']).sum()[['Global_Sales']]
sales_year.reset_index(inplace=True)
sales_year = sales_year.rename(columns = {'index':'new column name'})
sales_year.sort_values(by='Year_of_Release', ascending=True, inplace=True)

fig_dims = (19, 5)
fig, ax = plt.subplots(figsize=fig_dims)
sns.barplot(x='Year_of_Release', y='Global_Sales', ax=ax, data=sales_year)

"""**Количество игр по году**"""

df.head()

year_data = {year: df["Year_of_Release"].to_list().count(year) for year in set(df["Year_of_Release"])}

year_df = pd.DataFrame.from_dict(data=year_data, orient="index", columns=["Number of Games"])
year_df.head()

year_df.reset_index(inplace=True)
year_df = year_df.rename(columns = {'index':'year'})

fig_dims = (8, 4)
fig, ax = plt.subplots(figsize=fig_dims)
sns.lineplot(x='year', y='Number of Games', data=year_df, ax=ax)

"""**Количество игр по жанру**"""

genre_data = {genre: df["Genre"].to_list().count(genre) for genre in set(df["Genre"])}

genre_df = pd.DataFrame.from_dict(data=genre_data, orient="index", columns=["Number of Games"])

genre_df.reset_index(inplace=True)
genre_df = genre_df.rename(columns = {'index':'Genre'})

genre_df.sort_values(by='Number of Games', ascending=False, inplace=True)
genre_df

fig_dims = (19, 5)
fig, ax = plt.subplots(figsize=fig_dims)
sns.barplot(x='Number of Games', y='Genre', ax=ax, data=genre_df)

"""**Выпуск популярных жанров по году**"""

df.head()

action_df = df.loc[df["Genre"] == "Action"]
shooter_df = df.loc[df["Genre"]=="Shooter"]
sports_df = df.loc[df["Genre"]=="Sports"]

action_data = {year: action_df["Year_of_Release"].to_list().count(year) for year in set(action_df["Year_of_Release"])}
to_add_action_data = {year: 0 for year in set(df["Year_of_Release"]) if year not in set(action_df["Year_of_Release"])}
action_data.update(to_add_action_data)
year_action_df = pd.DataFrame.from_dict(data=action_data,
                                        orient="index", 
                                  columns=["Action"])
year_action_df = year_action_df.sort_index(axis=0)

shooter_data = {year: shooter_df["Year_of_Release"].to_list().count(year) for year in set(shooter_df["Year_of_Release"])}
to_add_shooter_data = {year: 0 for year in set(df["Year_of_Release"]) if year not in set(shooter_df["Year_of_Release"])}
shooter_data.update(to_add_shooter_data)
year_shooter_df = pd.DataFrame.from_dict(data=shooter_data, 
                                  orient="index", 
                                  columns=["Shooter"])
year_shooter_df = year_shooter_df.sort_index(axis=0)

sports_data = {year: sports_df["Year_of_Release"].to_list().count(year) for year in set(sports_df["Year_of_Release"])}
to_add_sports_data = {year: 0 for year in set(df["Year_of_Release"]) if year not in set(sports_df["Year_of_Release"])}
sports_data.update(to_add_sports_data)
year_sports_df = pd.DataFrame.from_dict(data=sports_data, 
                                  orient="index", 
                                  columns=["Sports"])
year_sports_df = year_sports_df.sort_index(axis=0)

year_all = year_action_df.merge(year_shooter_df, left_index=True, right_index=True)
year_all = year_all.merge(year_sports_df, left_index=True, right_index=True)

year_all.reset_index(inplace=True)
year_all = year_all.rename(columns = {'index':'Year'})
year_all

fig_dims = (10, 5)
fig, ax = plt.subplots(figsize=fig_dims)
sns.lineplot(x='Year', y='value', hue='variable', 
             data=pd.melt(year_all, ['Year']), ax=ax)

"""**Количество игр по рейтингу**"""

rating_data = {rating: df["Rating"].to_list().count(rating) for rating in set(df["Rating"])}
#to_add_rating_data = {rating: 0 for rating in set(df["Rating"]) if rating not in set(action_df["Rating"])}
#rating_data.update(to_add_rating_data)
rating_df = pd.DataFrame.from_dict(data=rating_data,
                                        orient="index", 
                                  columns=["Number of Games"])
rating_df.sort_values(by='Number of Games', ascending=True, inplace=True)
rating_df.reset_index(inplace=True)
rating_df.rename(columns = {'index':'Rating'}, inplace=True)

rating_df

fig_dims = (8, 3)
fig, ax = plt.subplots(figsize=fig_dims)
sns.barplot(x='Number of Games', y='Rating', data=rating_df, ax=ax)

"""**Оценка**"""

df.head()

fig_dims = (8, 5)
fig, ax = plt.subplots(figsize=fig_dims)
sns.scatterplot(x='User_Score', y='Critic_Score', data=df, ax=ax)

"""**Продажа по регионе и по платформе**"""

df_copy = df.groupby(['Platform']).sum()[['NA_Sales', 'EU_Sales', 'JP_Sales', 'Other_Sales', 'Global_Sales']]
df_copy.reset_index(inplace=True)
df_copy.sort_values(by='Other_Sales', inplace=True, ascending=False)
sum_other_JP = df_copy['Other_Sales']+df_copy['JP_Sales']
sum_other_JP_NA = df_copy['Other_Sales']+df_copy['JP_Sales']+df_copy['NA_Sales']
df_copy['sum1'] = sum_other_JP
df_copy['sum2'] = sum_other_JP_NA
df_copy

sns.set_style("white")
sns.set_context({"figure.figsize": (15, 9)})

#Plot 1 - background - "total" (top) series
sns.barplot(y='Platform', x='Global_Sales', color = "#FAC748", data=df_copy)
sns.barplot(y='Platform', x='sum2', color='#6EAF46', data=df_copy)
sns.barplot(y='Platform', x='sum1', color='#8390FA', data=df_copy)
bottom_plot = sns.barplot(y='Platform', x='Other_Sales', color='#1D2F6F', data=df_copy)

topbar = plt.Rectangle((0,0),1,1,fc="#FAC748", edgecolor = 'none')
top2bar = plt.Rectangle((0,0),1,1,fc='#6EAF46', edgecolor='none')
bottom2bar = plt.Rectangle((0,0),1,1, fc='#8390FA', edgecolor='none')
bottombar = plt.Rectangle((0,0),1,1,fc='#1D2F6F',  edgecolor = 'none')
l = plt.legend([bottombar, bottom2bar, top2bar, topbar], ['Others', 'JP', 'NA', 'EU'], loc=4, ncol = 4, prop={'size':16})
l.draw_frame(True)

sns.despine(left=True)
bottom_plot.set_ylabel("Platform")
bottom_plot.set_xlabel("Global_Sales")



"""# Hypothesis

**Nintendo - издатель самых продаваемых видеоигр**
"""

df.head()

top100 = df.head(100)

top100

top_publisher = top100.groupby('Publisher').sum()[['Global_Sales']]

top_publisher.reset_index(inplace=True)

fig_dims = (10, 6)
fig, ax = plt.subplots(figsize=fig_dims)
sns.barplot(x='Global_Sales', y='Publisher', data=top_publisher, ax=ax)

"""**Видеоигры жанров Action, Shooter, Fighting в основном ориентированы для взрослых геймеров.**


"""

df.head()

asf = df.loc[(df['Genre'] == 'Action') | (df['Genre'] == 'Shooter') | (df['Genre']=='Fighting')][['Genre','Rating']]
asf.head()

asf.dropna(axis='index', inplace=True)

asf

rating_count = asf.loc[(df['Genre']=='Action') | (asf['Genre']=='Shooter') | (asf['Genre']=='Fighting')].value_counts()
rating_count = pd.DataFrame(data=rating_count)
rating_count.reset_index(inplace=True)
rating_count = rating_count.rename({0: 'Count'}, axis=1)
rating_count

import plotly.express as px

fig = px.bar(rating_count, x="Genre", y="Count", color="Rating",
            barmode = 'stack', width=500, height=400)
fig.update_traces(width=0.3)
fig.show()

"""**Мировая продажа отражает оценку пользователей.**"""

df.head()

#fig_dims = (5, 3)
#fig, ax = plt.subplots(figsize=fig_dims)
sns.relplot(x='User_Score', y='Global_Sales', data=df)

"""**Новые видеоигры более качественные чем старые.**"""

old = df.loc[df['Year_of_Release'] <= 2000]
new = df.loc[df['Year_of_Release'] > 2000]

top = df.loc[df['Global_Sales'] >= 1]
top.shape

bottom = df.loc[df['Global_Sales'] <= 0.1]

old_top_count = top['Global_Sales'][top['Year_of_Release'] <= 2000].count()/old.shape[0] * 100
new_top_count = top['Global_Sales'][top['Year_of_Release'] > 2000].count()/new.shape[0] * 100

old_bot_count = bottom['Global_Sales'][bottom['Year_of_Release'] <= 2000].count()/old.shape[0] * 100
new_bot_count = bottom['Global_Sales'][bottom['Year_of_Release'] > 2000].count()/new.shape[0] * 100

data = {'Games':['Before 2000', 'After 2000'], 'More than 1 million': [old_top_count, new_top_count],
        'Less than 100k': [old_bot_count, new_bot_count]}

old_vs_new = pd.DataFrame(data)
#old_vs_new = old_vs_new.melt()
old_vs_new.set_index('Games', inplace=True)
old_vs_new = old_vs_new.melt(ignore_index=False, var_name='Sales', value_name='Percentage')
old_vs_new.reset_index(inplace=True)
old_vs_new

fig = px.bar(old_vs_new, x = 'Games', y = 'Percentage', color='Sales')
fig.update_layout(width = 500, height = 400)
fig.show()

"""**Чем больше копий издатель может продать, тем больше видеоигр он выпустит**"""

